//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SystimeWCF.SystimeServiceWcf {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ViewPortObject", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer")]
    [System.SerializableAttribute()]
    public partial class ViewPortObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObjIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystimeWCF.SystimeServiceWcf.Location ObjLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystimeWCF.SystimeServiceWcf.ObjectType ObjTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ObjId {
            get {
                return this.ObjIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjIdField, value) != true)) {
                    this.ObjIdField = value;
                    this.RaisePropertyChanged("ObjId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystimeWCF.SystimeServiceWcf.Location ObjLocation {
            get {
                return this.ObjLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ObjLocationField, value) != true)) {
                    this.ObjLocationField = value;
                    this.RaisePropertyChanged("ObjLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystimeWCF.SystimeServiceWcf.ObjectType ObjType {
            get {
                return this.ObjTypeField;
            }
            set {
                if ((this.ObjTypeField.Equals(value) != true)) {
                    this.ObjTypeField = value;
                    this.RaisePropertyChanged("ObjType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AngleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Coordinates_XField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Coordinates_YField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double Coordinates_ZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdWorkStationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationAreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> LocationDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Angle {
            get {
                return this.AngleField;
            }
            set {
                if ((this.AngleField.Equals(value) != true)) {
                    this.AngleField = value;
                    this.RaisePropertyChanged("Angle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Coordinates_X {
            get {
                return this.Coordinates_XField;
            }
            set {
                if ((this.Coordinates_XField.Equals(value) != true)) {
                    this.Coordinates_XField = value;
                    this.RaisePropertyChanged("Coordinates_X");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Coordinates_Y {
            get {
                return this.Coordinates_YField;
            }
            set {
                if ((this.Coordinates_YField.Equals(value) != true)) {
                    this.Coordinates_YField = value;
                    this.RaisePropertyChanged("Coordinates_Y");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Coordinates_Z {
            get {
                return this.Coordinates_ZField;
            }
            set {
                if ((this.Coordinates_ZField.Equals(value) != true)) {
                    this.Coordinates_ZField = value;
                    this.RaisePropertyChanged("Coordinates_Z");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdWorkStation {
            get {
                return this.IdWorkStationField;
            }
            set {
                if ((this.IdWorkStationField.Equals(value) != true)) {
                    this.IdWorkStationField = value;
                    this.RaisePropertyChanged("IdWorkStation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationArea {
            get {
                return this.LocationAreaField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationAreaField, value) != true)) {
                    this.LocationAreaField = value;
                    this.RaisePropertyChanged("LocationArea");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LocationDate {
            get {
                return this.LocationDateField;
            }
            set {
                if ((this.LocationDateField.Equals(value) != true)) {
                    this.LocationDateField = value;
                    this.RaisePropertyChanged("LocationDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ObjectType", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Model.UtilityModels")]
    public enum ObjectType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Worker = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkOrder = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        All = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActiveWorker", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer")]
    [System.SerializableAttribute()]
    public partial class ActiveWorker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystimeWCF.SystimeServiceWcf.Worker CurrentWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystimeWCF.SystimeServiceWcf.Location WorkerLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystimeWCF.SystimeServiceWcf.Worker CurrentWorker {
            get {
                return this.CurrentWorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentWorkerField, value) != true)) {
                    this.CurrentWorkerField = value;
                    this.RaisePropertyChanged("CurrentWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystimeWCF.SystimeServiceWcf.Location WorkerLocation {
            get {
                return this.WorkerLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkerLocationField, value) != true)) {
                    this.WorkerLocationField = value;
                    this.RaisePropertyChanged("WorkerLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Worker", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class Worker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AssignedHoursField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPendingTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDealerShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdJobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdPhysicalTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NickNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProgressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkedHoursField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssignedHours {
            get {
                return this.AssignedHoursField;
            }
            set {
                if ((this.AssignedHoursField.Equals(value) != true)) {
                    this.AssignedHoursField = value;
                    this.RaisePropertyChanged("AssignedHours");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPendingTask {
            get {
                return this.HasPendingTaskField;
            }
            set {
                if ((this.HasPendingTaskField.Equals(value) != true)) {
                    this.HasPendingTaskField = value;
                    this.RaisePropertyChanged("HasPendingTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDealerShop {
            get {
                return this.IdDealerShopField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDealerShopField, value) != true)) {
                    this.IdDealerShopField = value;
                    this.RaisePropertyChanged("IdDealerShop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdJobTitle {
            get {
                return this.IdJobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.IdJobTitleField, value) != true)) {
                    this.IdJobTitleField = value;
                    this.RaisePropertyChanged("IdJobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdPhysicalTag {
            get {
                return this.IdPhysicalTagField;
            }
            set {
                if ((this.IdPhysicalTagField.Equals(value) != true)) {
                    this.IdPhysicalTagField = value;
                    this.RaisePropertyChanged("IdPhysicalTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdWorker {
            get {
                return this.IdWorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.IdWorkerField, value) != true)) {
                    this.IdWorkerField = value;
                    this.RaisePropertyChanged("IdWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobTitle {
            get {
                return this.JobTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.JobTitleField, value) != true)) {
                    this.JobTitleField = value;
                    this.RaisePropertyChanged("JobTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NickName {
            get {
                return this.NickNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NickNameField, value) != true)) {
                    this.NickNameField = value;
                    this.RaisePropertyChanged("NickName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Progress {
            get {
                return this.ProgressField;
            }
            set {
                if ((this.ProgressField.Equals(value) != true)) {
                    this.ProgressField = value;
                    this.RaisePropertyChanged("Progress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkedHours {
            get {
                return this.WorkedHoursField;
            }
            set {
                if ((this.WorkedHoursField.Equals(value) != true)) {
                    this.WorkedHoursField = value;
                    this.RaisePropertyChanged("WorkedHours");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OpenedWorkOrders", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer")]
    [System.SerializableAttribute()]
    public partial class OpenedWorkOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystimeWCF.SystimeServiceWcf.WorkOrder CurrentWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystimeWCF.SystimeServiceWcf.Location WorkOrderLocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystimeWCF.SystimeServiceWcf.WorkOrder CurrentWorkOrder {
            get {
                return this.CurrentWorkOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentWorkOrderField, value) != true)) {
                    this.CurrentWorkOrderField = value;
                    this.RaisePropertyChanged("CurrentWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystimeWCF.SystimeServiceWcf.Location WorkOrderLocation {
            get {
                return this.WorkOrderLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderLocationField, value) != true)) {
                    this.WorkOrderLocationField = value;
                    this.RaisePropertyChanged("WorkOrderLocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkOrder", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class WorkOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] AuthorizedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerMobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] EnteredAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeedBackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasTotalLossField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int>[] IdCurrentOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] IdCurrentWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] IdDealerShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int>[] IdErpQuoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdInsuranceCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdPhysicalTagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] IdSalesRepresentativeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdVinNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long[] IdWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] InvoicedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsInsuredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] OpenOtAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] PartCompletedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] PickedUpAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] PromisedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RatingDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<short> RatingInsuranceCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime>[] ReadyToPickUpAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] WorkOrderNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] AuthorizedAt {
            get {
                return this.AuthorizedAtField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorizedAtField, value) != true)) {
                    this.AuthorizedAtField = value;
                    this.RaisePropertyChanged("AuthorizedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDocumentNumber {
            get {
                return this.CustomerDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocumentNumberField, value) != true)) {
                    this.CustomerDocumentNumberField = value;
                    this.RaisePropertyChanged("CustomerDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerMobile {
            get {
                return this.CustomerMobileField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerMobileField, value) != true)) {
                    this.CustomerMobileField = value;
                    this.RaisePropertyChanged("CustomerMobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] EnteredAt {
            get {
                return this.EnteredAtField;
            }
            set {
                if ((object.ReferenceEquals(this.EnteredAtField, value) != true)) {
                    this.EnteredAtField = value;
                    this.RaisePropertyChanged("EnteredAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeedBack {
            get {
                return this.FeedBackField;
            }
            set {
                if ((object.ReferenceEquals(this.FeedBackField, value) != true)) {
                    this.FeedBackField = value;
                    this.RaisePropertyChanged("FeedBack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasTotalLoss {
            get {
                return this.HasTotalLossField;
            }
            set {
                if ((this.HasTotalLossField.Equals(value) != true)) {
                    this.HasTotalLossField = value;
                    this.RaisePropertyChanged("HasTotalLoss");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int>[] IdCurrentOperation {
            get {
                return this.IdCurrentOperationField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCurrentOperationField, value) != true)) {
                    this.IdCurrentOperationField = value;
                    this.RaisePropertyChanged("IdCurrentOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IdCurrentWorker {
            get {
                return this.IdCurrentWorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCurrentWorkerField, value) != true)) {
                    this.IdCurrentWorkerField = value;
                    this.RaisePropertyChanged("IdCurrentWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdCustomer {
            get {
                return this.IdCustomerField;
            }
            set {
                if ((this.IdCustomerField.Equals(value) != true)) {
                    this.IdCustomerField = value;
                    this.RaisePropertyChanged("IdCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IdDealerShop {
            get {
                return this.IdDealerShopField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDealerShopField, value) != true)) {
                    this.IdDealerShopField = value;
                    this.RaisePropertyChanged("IdDealerShop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int>[] IdErpQuote {
            get {
                return this.IdErpQuoteField;
            }
            set {
                if ((object.ReferenceEquals(this.IdErpQuoteField, value) != true)) {
                    this.IdErpQuoteField = value;
                    this.RaisePropertyChanged("IdErpQuote");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdInsuranceCompany {
            get {
                return this.IdInsuranceCompanyField;
            }
            set {
                if ((this.IdInsuranceCompanyField.Equals(value) != true)) {
                    this.IdInsuranceCompanyField = value;
                    this.RaisePropertyChanged("IdInsuranceCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdPhysicalTag {
            get {
                return this.IdPhysicalTagField;
            }
            set {
                if ((this.IdPhysicalTagField.Equals(value) != true)) {
                    this.IdPhysicalTagField = value;
                    this.RaisePropertyChanged("IdPhysicalTag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] IdSalesRepresentative {
            get {
                return this.IdSalesRepresentativeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdSalesRepresentativeField, value) != true)) {
                    this.IdSalesRepresentativeField = value;
                    this.RaisePropertyChanged("IdSalesRepresentative");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdVinNumber {
            get {
                return this.IdVinNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IdVinNumberField, value) != true)) {
                    this.IdVinNumberField = value;
                    this.RaisePropertyChanged("IdVinNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long[] IdWorkOrder {
            get {
                return this.IdWorkOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.IdWorkOrderField, value) != true)) {
                    this.IdWorkOrderField = value;
                    this.RaisePropertyChanged("IdWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] InvoicedAt {
            get {
                return this.InvoicedAtField;
            }
            set {
                if ((object.ReferenceEquals(this.InvoicedAtField, value) != true)) {
                    this.InvoicedAtField = value;
                    this.RaisePropertyChanged("InvoicedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInsured {
            get {
                return this.IsInsuredField;
            }
            set {
                if ((this.IsInsuredField.Equals(value) != true)) {
                    this.IsInsuredField = value;
                    this.RaisePropertyChanged("IsInsured");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] OpenOtAt {
            get {
                return this.OpenOtAtField;
            }
            set {
                if ((object.ReferenceEquals(this.OpenOtAtField, value) != true)) {
                    this.OpenOtAtField = value;
                    this.RaisePropertyChanged("OpenOtAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] PartCompletedAt {
            get {
                return this.PartCompletedAtField;
            }
            set {
                if ((object.ReferenceEquals(this.PartCompletedAtField, value) != true)) {
                    this.PartCompletedAtField = value;
                    this.RaisePropertyChanged("PartCompletedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] PickedUpAt {
            get {
                return this.PickedUpAtField;
            }
            set {
                if ((object.ReferenceEquals(this.PickedUpAtField, value) != true)) {
                    this.PickedUpAtField = value;
                    this.RaisePropertyChanged("PickedUpAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] PromisedAt {
            get {
                return this.PromisedAtField;
            }
            set {
                if ((object.ReferenceEquals(this.PromisedAtField, value) != true)) {
                    this.PromisedAtField = value;
                    this.RaisePropertyChanged("PromisedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RatingDealer {
            get {
                return this.RatingDealerField;
            }
            set {
                if ((this.RatingDealerField.Equals(value) != true)) {
                    this.RatingDealerField = value;
                    this.RaisePropertyChanged("RatingDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> RatingInsuranceCompany {
            get {
                return this.RatingInsuranceCompanyField;
            }
            set {
                if ((this.RatingInsuranceCompanyField.Equals(value) != true)) {
                    this.RatingInsuranceCompanyField = value;
                    this.RaisePropertyChanged("RatingInsuranceCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime>[] ReadyToPickUpAt {
            get {
                return this.ReadyToPickUpAtField;
            }
            set {
                if ((object.ReferenceEquals(this.ReadyToPickUpAtField, value) != true)) {
                    this.ReadyToPickUpAtField = value;
                    this.RaisePropertyChanged("ReadyToPickUpAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] WorkOrderNumber {
            get {
                return this.WorkOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderNumberField, value) != true)) {
                    this.WorkOrderNumberField = value;
                    this.RaisePropertyChanged("WorkOrderNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vehicle", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class Vehicle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerDocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DealerVehicleModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErpCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdCustomerOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdInsuranceCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdVehicleModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdVehicleServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdVehicleTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdVinNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> LastMileageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModelYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleServiceTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDocumentNumber {
            get {
                return this.CustomerDocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocumentNumberField, value) != true)) {
                    this.CustomerDocumentNumberField = value;
                    this.RaisePropertyChanged("CustomerDocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerCity {
            get {
                return this.DealerCityField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerCityField, value) != true)) {
                    this.DealerCityField = value;
                    this.RaisePropertyChanged("DealerCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DealerVehicleModel {
            get {
                return this.DealerVehicleModelField;
            }
            set {
                if ((object.ReferenceEquals(this.DealerVehicleModelField, value) != true)) {
                    this.DealerVehicleModelField = value;
                    this.RaisePropertyChanged("DealerVehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErpCity {
            get {
                return this.ErpCityField;
            }
            set {
                if ((object.ReferenceEquals(this.ErpCityField, value) != true)) {
                    this.ErpCityField = value;
                    this.RaisePropertyChanged("ErpCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCity {
            get {
                return this.IdCityField;
            }
            set {
                if ((this.IdCityField.Equals(value) != true)) {
                    this.IdCityField = value;
                    this.RaisePropertyChanged("IdCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCountry {
            get {
                return this.IdCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCountryField, value) != true)) {
                    this.IdCountryField = value;
                    this.RaisePropertyChanged("IdCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IdCustomerOwner {
            get {
                return this.IdCustomerOwnerField;
            }
            set {
                if ((this.IdCustomerOwnerField.Equals(value) != true)) {
                    this.IdCustomerOwnerField = value;
                    this.RaisePropertyChanged("IdCustomerOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdInsuranceCompany {
            get {
                return this.IdInsuranceCompanyField;
            }
            set {
                if ((this.IdInsuranceCompanyField.Equals(value) != true)) {
                    this.IdInsuranceCompanyField = value;
                    this.RaisePropertyChanged("IdInsuranceCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdVehicleModel {
            get {
                return this.IdVehicleModelField;
            }
            set {
                if ((this.IdVehicleModelField.Equals(value) != true)) {
                    this.IdVehicleModelField = value;
                    this.RaisePropertyChanged("IdVehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdVehicleServiceType {
            get {
                return this.IdVehicleServiceTypeField;
            }
            set {
                if ((this.IdVehicleServiceTypeField.Equals(value) != true)) {
                    this.IdVehicleServiceTypeField = value;
                    this.RaisePropertyChanged("IdVehicleServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdVehicleType {
            get {
                return this.IdVehicleTypeField;
            }
            set {
                if ((this.IdVehicleTypeField.Equals(value) != true)) {
                    this.IdVehicleTypeField = value;
                    this.RaisePropertyChanged("IdVehicleType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdVinNumber {
            get {
                return this.IdVinNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.IdVinNumberField, value) != true)) {
                    this.IdVinNumberField = value;
                    this.RaisePropertyChanged("IdVinNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> LastMileage {
            get {
                return this.LastMileageField;
            }
            set {
                if ((this.LastMileageField.Equals(value) != true)) {
                    this.LastMileageField = value;
                    this.RaisePropertyChanged("LastMileage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModelYear {
            get {
                return this.ModelYearField;
            }
            set {
                if ((this.ModelYearField.Equals(value) != true)) {
                    this.ModelYearField = value;
                    this.RaisePropertyChanged("ModelYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Plate {
            get {
                return this.PlateField;
            }
            set {
                if ((object.ReferenceEquals(this.PlateField, value) != true)) {
                    this.PlateField = value;
                    this.RaisePropertyChanged("Plate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleBrand {
            get {
                return this.VehicleBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleBrandField, value) != true)) {
                    this.VehicleBrandField = value;
                    this.RaisePropertyChanged("VehicleBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleModel {
            get {
                return this.VehicleModelField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleModelField, value) != true)) {
                    this.VehicleModelField = value;
                    this.RaisePropertyChanged("VehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleServiceType {
            get {
                return this.VehicleServiceTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleServiceTypeField, value) != true)) {
                    this.VehicleServiceTypeField = value;
                    this.RaisePropertyChanged("VehicleServiceType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleType {
            get {
                return this.VehicleTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleTypeField, value) != true)) {
                    this.VehicleTypeField = value;
                    this.RaisePropertyChanged("VehicleType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Operation", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class Operation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DefaultPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> EffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDefaultWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdNextOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsAssignableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DefaultPercentage {
            get {
                return this.DefaultPercentageField;
            }
            set {
                if ((this.DefaultPercentageField.Equals(value) != true)) {
                    this.DefaultPercentageField = value;
                    this.RaisePropertyChanged("DefaultPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Effort {
            get {
                return this.EffortField;
            }
            set {
                if ((this.EffortField.Equals(value) != true)) {
                    this.EffortField = value;
                    this.RaisePropertyChanged("Effort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDefaultWorker {
            get {
                return this.IdDefaultWorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDefaultWorkerField, value) != true)) {
                    this.IdDefaultWorkerField = value;
                    this.RaisePropertyChanged("IdDefaultWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdNextOperationByDealer {
            get {
                return this.IdNextOperationByDealerField;
            }
            set {
                if ((this.IdNextOperationByDealerField.Equals(value) != true)) {
                    this.IdNextOperationByDealerField = value;
                    this.RaisePropertyChanged("IdNextOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOperation {
            get {
                return this.IdOperationField;
            }
            set {
                if ((this.IdOperationField.Equals(value) != true)) {
                    this.IdOperationField = value;
                    this.RaisePropertyChanged("IdOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOperationByDealer {
            get {
                return this.IdOperationByDealerField;
            }
            set {
                if ((this.IdOperationByDealerField.Equals(value) != true)) {
                    this.IdOperationByDealerField = value;
                    this.RaisePropertyChanged("IdOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAssignable {
            get {
                return this.IsAssignableField;
            }
            set {
                if ((this.IsAssignableField.Equals(value) != true)) {
                    this.IsAssignableField = value;
                    this.RaisePropertyChanged("IsAssignable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubOperation", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class SubOperation : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> DefaultPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> EffortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDefaultWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdNextSubOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdSubOperationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdSubOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsAssignableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDefaultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> IsExternalJobField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> DefaultPercentage {
            get {
                return this.DefaultPercentageField;
            }
            set {
                if ((this.DefaultPercentageField.Equals(value) != true)) {
                    this.DefaultPercentageField = value;
                    this.RaisePropertyChanged("DefaultPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Effort {
            get {
                return this.EffortField;
            }
            set {
                if ((this.EffortField.Equals(value) != true)) {
                    this.EffortField = value;
                    this.RaisePropertyChanged("Effort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDefaultWorker {
            get {
                return this.IdDefaultWorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDefaultWorkerField, value) != true)) {
                    this.IdDefaultWorkerField = value;
                    this.RaisePropertyChanged("IdDefaultWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdNextSubOperationByDealer {
            get {
                return this.IdNextSubOperationByDealerField;
            }
            set {
                if ((this.IdNextSubOperationByDealerField.Equals(value) != true)) {
                    this.IdNextSubOperationByDealerField = value;
                    this.RaisePropertyChanged("IdNextSubOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdOperationByDealer {
            get {
                return this.IdOperationByDealerField;
            }
            set {
                if ((this.IdOperationByDealerField.Equals(value) != true)) {
                    this.IdOperationByDealerField = value;
                    this.RaisePropertyChanged("IdOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSubOperation {
            get {
                return this.IdSubOperationField;
            }
            set {
                if ((this.IdSubOperationField.Equals(value) != true)) {
                    this.IdSubOperationField = value;
                    this.RaisePropertyChanged("IdSubOperation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSubOperationByDealer {
            get {
                return this.IdSubOperationByDealerField;
            }
            set {
                if ((this.IdSubOperationByDealerField.Equals(value) != true)) {
                    this.IdSubOperationByDealerField = value;
                    this.RaisePropertyChanged("IdSubOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsAssignable {
            get {
                return this.IsAssignableField;
            }
            set {
                if ((this.IsAssignableField.Equals(value) != true)) {
                    this.IsAssignableField = value;
                    this.RaisePropertyChanged("IsAssignable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDefault {
            get {
                return this.IsDefaultField;
            }
            set {
                if ((this.IsDefaultField.Equals(value) != true)) {
                    this.IsDefaultField = value;
                    this.RaisePropertyChanged("IsDefault");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> IsExternalJob {
            get {
                return this.IsExternalJobField;
            }
            set {
                if ((this.IsExternalJobField.Equals(value) != true)) {
                    this.IsExternalJobField = value;
                    this.RaisePropertyChanged("IsExternalJob");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InsuranceCompany", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class InsuranceCompany : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdInsuranceCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TinField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WebsiteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdInsuranceCompany {
            get {
                return this.IdInsuranceCompanyField;
            }
            set {
                if ((this.IdInsuranceCompanyField.Equals(value) != true)) {
                    this.IdInsuranceCompanyField = value;
                    this.RaisePropertyChanged("IdInsuranceCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tin {
            get {
                return this.TinField;
            }
            set {
                if ((object.ReferenceEquals(this.TinField, value) != true)) {
                    this.TinField = value;
                    this.RaisePropertyChanged("Tin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Website {
            get {
                return this.WebsiteField;
            }
            set {
                if ((object.ReferenceEquals(this.WebsiteField, value) != true)) {
                    this.WebsiteField = value;
                    this.RaisePropertyChanged("Website");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DealerShop", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class DealerShop : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdDealerShopField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdDealerShop {
            get {
                return this.IdDealerShopField;
            }
            set {
                if ((object.ReferenceEquals(this.IdDealerShopField, value) != true)) {
                    this.IdDealerShopField = value;
                    this.RaisePropertyChanged("IdDealerShop");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationByWorkOrder", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class OperationByWorkOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EstimatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double EstimatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOperationByWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double MaterialCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WorkForceCostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkOrderNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double WorkedTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EstimatedAt {
            get {
                return this.EstimatedAtField;
            }
            set {
                if ((this.EstimatedAtField.Equals(value) != true)) {
                    this.EstimatedAtField = value;
                    this.RaisePropertyChanged("EstimatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double EstimatedTime {
            get {
                return this.EstimatedTimeField;
            }
            set {
                if ((this.EstimatedTimeField.Equals(value) != true)) {
                    this.EstimatedTimeField = value;
                    this.RaisePropertyChanged("EstimatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOperationByDealer {
            get {
                return this.IdOperationByDealerField;
            }
            set {
                if ((this.IdOperationByDealerField.Equals(value) != true)) {
                    this.IdOperationByDealerField = value;
                    this.RaisePropertyChanged("IdOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOperationByWorkOrder {
            get {
                return this.IdOperationByWorkOrderField;
            }
            set {
                if ((this.IdOperationByWorkOrderField.Equals(value) != true)) {
                    this.IdOperationByWorkOrderField = value;
                    this.RaisePropertyChanged("IdOperationByWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdWorkOrder {
            get {
                return this.IdWorkOrderField;
            }
            set {
                if ((this.IdWorkOrderField.Equals(value) != true)) {
                    this.IdWorkOrderField = value;
                    this.RaisePropertyChanged("IdWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double MaterialCost {
            get {
                return this.MaterialCostField;
            }
            set {
                if ((this.MaterialCostField.Equals(value) != true)) {
                    this.MaterialCostField = value;
                    this.RaisePropertyChanged("MaterialCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WorkForceCost {
            get {
                return this.WorkForceCostField;
            }
            set {
                if ((this.WorkForceCostField.Equals(value) != true)) {
                    this.WorkForceCostField = value;
                    this.RaisePropertyChanged("WorkForceCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WorkOrderNumber {
            get {
                return this.WorkOrderNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkOrderNumberField, value) != true)) {
                    this.WorkOrderNumberField = value;
                    this.RaisePropertyChanged("WorkOrderNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double WorkedTime {
            get {
                return this.WorkedTimeField;
            }
            set {
                if ((this.WorkedTimeField.Equals(value) != true)) {
                    this.WorkedTimeField = value;
                    this.RaisePropertyChanged("WorkedTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class Customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FullNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdCustomerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MovileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNumberField, value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCity {
            get {
                return this.IdCityField;
            }
            set {
                if ((this.IdCityField.Equals(value) != true)) {
                    this.IdCityField = value;
                    this.RaisePropertyChanged("IdCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCountry {
            get {
                return this.IdCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCountryField, value) != true)) {
                    this.IdCountryField = value;
                    this.RaisePropertyChanged("IdCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdCustomer {
            get {
                return this.IdCustomerField;
            }
            set {
                if ((this.IdCustomerField.Equals(value) != true)) {
                    this.IdCustomerField = value;
                    this.RaisePropertyChanged("IdCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Movile {
            get {
                return this.MovileField;
            }
            set {
                if ((object.ReferenceEquals(this.MovileField, value) != true)) {
                    this.MovileField = value;
                    this.RaisePropertyChanged("Movile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubOperationByWorkOrder", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class SubOperationByWorkOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> AssignedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AssignedToField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOperationByWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdSubOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdSubOperationByWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OperationTimePercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double SubOperationTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> WorkedTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AssignedAt {
            get {
                return this.AssignedAtField;
            }
            set {
                if ((this.AssignedAtField.Equals(value) != true)) {
                    this.AssignedAtField = value;
                    this.RaisePropertyChanged("AssignedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedById {
            get {
                return this.AssignedByIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedByIdField, value) != true)) {
                    this.AssignedByIdField = value;
                    this.RaisePropertyChanged("AssignedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssignedTo {
            get {
                return this.AssignedToField;
            }
            set {
                if ((object.ReferenceEquals(this.AssignedToField, value) != true)) {
                    this.AssignedToField = value;
                    this.RaisePropertyChanged("AssignedTo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedAt {
            get {
                return this.CompletedAtField;
            }
            set {
                if ((this.CompletedAtField.Equals(value) != true)) {
                    this.CompletedAtField = value;
                    this.RaisePropertyChanged("CompletedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOperationByWorkOrder {
            get {
                return this.IdOperationByWorkOrderField;
            }
            set {
                if ((this.IdOperationByWorkOrderField.Equals(value) != true)) {
                    this.IdOperationByWorkOrderField = value;
                    this.RaisePropertyChanged("IdOperationByWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSubOperationByDealer {
            get {
                return this.IdSubOperationByDealerField;
            }
            set {
                if ((this.IdSubOperationByDealerField.Equals(value) != true)) {
                    this.IdSubOperationByDealerField = value;
                    this.RaisePropertyChanged("IdSubOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSubOperationByWorkOrder {
            get {
                return this.IdSubOperationByWorkOrderField;
            }
            set {
                if ((this.IdSubOperationByWorkOrderField.Equals(value) != true)) {
                    this.IdSubOperationByWorkOrderField = value;
                    this.RaisePropertyChanged("IdSubOperationByWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double OperationTimePercentage {
            get {
                return this.OperationTimePercentageField;
            }
            set {
                if ((this.OperationTimePercentageField.Equals(value) != true)) {
                    this.OperationTimePercentageField = value;
                    this.RaisePropertyChanged("OperationTimePercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double SubOperationTime {
            get {
                return this.SubOperationTimeField;
            }
            set {
                if ((this.SubOperationTimeField.Equals(value) != true)) {
                    this.SubOperationTimeField = value;
                    this.RaisePropertyChanged("SubOperationTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> WorkedTime {
            get {
                return this.WorkedTimeField;
            }
            set {
                if ((this.WorkedTimeField.Equals(value) != true)) {
                    this.WorkedTimeField = value;
                    this.RaisePropertyChanged("WorkedTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkOrderDataType", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Model.UtilityModels")]
    public enum WorkOrderDataType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AuthorizedAt = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartsCompletedAt = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ReadyToPickUpAt = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PickedUpAt = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TrackingByWorkOrder", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class TrackingByWorkOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCurrentWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdSubOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdWorkOrderTrackingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdWorkOrderTrackingDetailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdWorkerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWaitingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NoteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TrackingDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedById {
            get {
                return this.CreatedByIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByIdField, value) != true)) {
                    this.CreatedByIdField = value;
                    this.RaisePropertyChanged("CreatedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCurrentWorker {
            get {
                return this.IdCurrentWorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCurrentWorkerField, value) != true)) {
                    this.IdCurrentWorkerField = value;
                    this.RaisePropertyChanged("IdCurrentWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSubOperationByDealer {
            get {
                return this.IdSubOperationByDealerField;
            }
            set {
                if ((this.IdSubOperationByDealerField.Equals(value) != true)) {
                    this.IdSubOperationByDealerField = value;
                    this.RaisePropertyChanged("IdSubOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdWorkOrder {
            get {
                return this.IdWorkOrderField;
            }
            set {
                if ((this.IdWorkOrderField.Equals(value) != true)) {
                    this.IdWorkOrderField = value;
                    this.RaisePropertyChanged("IdWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdWorkOrderTracking {
            get {
                return this.IdWorkOrderTrackingField;
            }
            set {
                if ((this.IdWorkOrderTrackingField.Equals(value) != true)) {
                    this.IdWorkOrderTrackingField = value;
                    this.RaisePropertyChanged("IdWorkOrderTracking");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdWorkOrderTrackingDetail {
            get {
                return this.IdWorkOrderTrackingDetailField;
            }
            set {
                if ((this.IdWorkOrderTrackingDetailField.Equals(value) != true)) {
                    this.IdWorkOrderTrackingDetailField = value;
                    this.RaisePropertyChanged("IdWorkOrderTrackingDetail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdWorker {
            get {
                return this.IdWorkerField;
            }
            set {
                if ((object.ReferenceEquals(this.IdWorkerField, value) != true)) {
                    this.IdWorkerField = value;
                    this.RaisePropertyChanged("IdWorker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWaiting {
            get {
                return this.IsWaitingField;
            }
            set {
                if ((this.IsWaitingField.Equals(value) != true)) {
                    this.IsWaitingField = value;
                    this.RaisePropertyChanged("IsWaiting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Note {
            get {
                return this.NoteField;
            }
            set {
                if ((object.ReferenceEquals(this.NoteField, value) != true)) {
                    this.NoteField = value;
                    this.RaisePropertyChanged("Note");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TrackingDate {
            get {
                return this.TrackingDateField;
            }
            set {
                if ((this.TrackingDateField.Equals(value) != true)) {
                    this.TrackingDateField = value;
                    this.RaisePropertyChanged("TrackingDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdUrlPath", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Model.UtilityModels")]
    public enum IdUrlPath : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AcceptedQuotes = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InitialQUotes = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InsuranceCompanies = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        QuotesRequest = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Shops = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tracking = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TrackingDetail = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Vehicles = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Workers = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkOrders = 9,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileType", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Model.UtilityModels")]
    public enum FileType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pictures = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Documents = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AllFiles = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkStationPolygon", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.UtilityModels")]
    [System.SerializableAttribute()]
    public partial class WorkStationPolygon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float AngleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AreaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPolygonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private SystimeWCF.SystimeServiceWcf.Coordinates[] PointsListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float XCenterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float YCenterField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float Angle {
            get {
                return this.AngleField;
            }
            set {
                if ((this.AngleField.Equals(value) != true)) {
                    this.AngleField = value;
                    this.RaisePropertyChanged("Angle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPolygon {
            get {
                return this.IdPolygonField;
            }
            set {
                if ((this.IdPolygonField.Equals(value) != true)) {
                    this.IdPolygonField = value;
                    this.RaisePropertyChanged("IdPolygon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SystimeWCF.SystimeServiceWcf.Coordinates[] PointsList {
            get {
                return this.PointsListField;
            }
            set {
                if ((object.ReferenceEquals(this.PointsListField, value) != true)) {
                    this.PointsListField = value;
                    this.RaisePropertyChanged("PointsList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float XCenter {
            get {
                return this.XCenterField;
            }
            set {
                if ((this.XCenterField.Equals(value) != true)) {
                    this.XCenterField = value;
                    this.RaisePropertyChanged("XCenter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float YCenter {
            get {
                return this.YCenterField;
            }
            set {
                if ((this.YCenterField.Equals(value) != true)) {
                    this.YCenterField = value;
                    this.RaisePropertyChanged("YCenter");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coordinates", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.UtilityModels")]
    [System.SerializableAttribute()]
    public partial class Coordinates : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float pXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float pYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int xyPairField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float pX {
            get {
                return this.pXField;
            }
            set {
                if ((this.pXField.Equals(value) != true)) {
                    this.pXField = value;
                    this.RaisePropertyChanged("pX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float pY {
            get {
                return this.pYField;
            }
            set {
                if ((this.pYField.Equals(value) != true)) {
                    this.pYField = value;
                    this.RaisePropertyChanged("pY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int xyPair {
            get {
                return this.xyPairField;
            }
            set {
                if ((this.xyPairField.Equals(value) != true)) {
                    this.xyPairField = value;
                    this.RaisePropertyChanged("xyPair");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExternalWork", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class ExternalWork : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<float> EstimatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdActionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdExternalJobByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdJobByWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdPartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdWorkOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdatedByIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedAt {
            get {
                return this.CompletedAtField;
            }
            set {
                if ((this.CompletedAtField.Equals(value) != true)) {
                    this.CompletedAtField = value;
                    this.RaisePropertyChanged("CompletedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedById {
            get {
                return this.CreatedByIdField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByIdField, value) != true)) {
                    this.CreatedByIdField = value;
                    this.RaisePropertyChanged("CreatedById");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<float> EstimatedTime {
            get {
                return this.EstimatedTimeField;
            }
            set {
                if ((this.EstimatedTimeField.Equals(value) != true)) {
                    this.EstimatedTimeField = value;
                    this.RaisePropertyChanged("EstimatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdAction {
            get {
                return this.IdActionField;
            }
            set {
                if ((this.IdActionField.Equals(value) != true)) {
                    this.IdActionField = value;
                    this.RaisePropertyChanged("IdAction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdExternalJobByDealer {
            get {
                return this.IdExternalJobByDealerField;
            }
            set {
                if ((this.IdExternalJobByDealerField.Equals(value) != true)) {
                    this.IdExternalJobByDealerField = value;
                    this.RaisePropertyChanged("IdExternalJobByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJobByWorkOrder {
            get {
                return this.IdJobByWorkOrderField;
            }
            set {
                if ((this.IdJobByWorkOrderField.Equals(value) != true)) {
                    this.IdJobByWorkOrderField = value;
                    this.RaisePropertyChanged("IdJobByWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdOperationByDealer {
            get {
                return this.IdOperationByDealerField;
            }
            set {
                if ((this.IdOperationByDealerField.Equals(value) != true)) {
                    this.IdOperationByDealerField = value;
                    this.RaisePropertyChanged("IdOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdPart {
            get {
                return this.IdPartField;
            }
            set {
                if ((this.IdPartField.Equals(value) != true)) {
                    this.IdPartField = value;
                    this.RaisePropertyChanged("IdPart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdWorkOrder {
            get {
                return this.IdWorkOrderField;
            }
            set {
                if ((this.IdWorkOrderField.Equals(value) != true)) {
                    this.IdWorkOrderField = value;
                    this.RaisePropertyChanged("IdWorkOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartName {
            get {
                return this.PartNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PartNameField, value) != true)) {
                    this.PartNameField = value;
                    this.RaisePropertyChanged("PartName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdatedAt {
            get {
                return this.UpdatedAtField;
            }
            set {
                if ((this.UpdatedAtField.Equals(value) != true)) {
                    this.UpdatedAtField = value;
                    this.RaisePropertyChanged("UpdatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedById {
            get {
                return this.UpdatedByIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedByIdField, value) != true)) {
                    this.UpdatedByIdField = value;
                    this.RaisePropertyChanged("UpdatedById");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="JobTitle", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class JobTitle : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdJObTitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdSubOperationByDealerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsAssignableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdJObTitle {
            get {
                return this.IdJObTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.IdJObTitleField, value) != true)) {
                    this.IdJObTitleField = value;
                    this.RaisePropertyChanged("IdJObTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdSubOperationByDealer {
            get {
                return this.IdSubOperationByDealerField;
            }
            set {
                if ((this.IdSubOperationByDealerField.Equals(value) != true)) {
                    this.IdSubOperationByDealerField = value;
                    this.RaisePropertyChanged("IdSubOperationByDealer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAssignable {
            get {
                return this.IsAssignableField;
            }
            set {
                if ((this.IsAssignableField.Equals(value) != true)) {
                    this.IsAssignableField = value;
                    this.RaisePropertyChanged("IsAssignable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="City", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class City : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CytiCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CytiNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> IdStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> LongitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeZoneNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CytiCode {
            get {
                return this.CytiCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CytiCodeField, value) != true)) {
                    this.CytiCodeField = value;
                    this.RaisePropertyChanged("CytiCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CytiName {
            get {
                return this.CytiNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CytiNameField, value) != true)) {
                    this.CytiNameField = value;
                    this.RaisePropertyChanged("CytiName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCity {
            get {
                return this.IdCityField;
            }
            set {
                if ((this.IdCityField.Equals(value) != true)) {
                    this.IdCityField = value;
                    this.RaisePropertyChanged("IdCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCountry {
            get {
                return this.IdCountryField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCountryField, value) != true)) {
                    this.IdCountryField = value;
                    this.RaisePropertyChanged("IdCountry");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> IdState {
            get {
                return this.IdStateField;
            }
            set {
                if ((this.IdStateField.Equals(value) != true)) {
                    this.IdStateField = value;
                    this.RaisePropertyChanged("IdState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZoneName {
            get {
                return this.TimeZoneNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneNameField, value) != true)) {
                    this.TimeZoneNameField = value;
                    this.RaisePropertyChanged("TimeZoneName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleBrand", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class VehicleBrand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdVehicleBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleBrandNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdVehicleBrand {
            get {
                return this.IdVehicleBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.IdVehicleBrandField, value) != true)) {
                    this.IdVehicleBrandField = value;
                    this.RaisePropertyChanged("IdVehicleBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleBrandName {
            get {
                return this.VehicleBrandNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleBrandNameField, value) != true)) {
                    this.VehicleBrandNameField = value;
                    this.RaisePropertyChanged("VehicleBrandName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VehicleModel", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer.Base")]
    [System.SerializableAttribute()]
    public partial class VehicleModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdVehicleBrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdVehicleModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VehicleModelNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasPhoto {
            get {
                return this.HasPhotoField;
            }
            set {
                if ((this.HasPhotoField.Equals(value) != true)) {
                    this.HasPhotoField = value;
                    this.RaisePropertyChanged("HasPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdVehicleBrand {
            get {
                return this.IdVehicleBrandField;
            }
            set {
                if ((object.ReferenceEquals(this.IdVehicleBrandField, value) != true)) {
                    this.IdVehicleBrandField = value;
                    this.RaisePropertyChanged("IdVehicleBrand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdVehicleModel {
            get {
                return this.IdVehicleModelField;
            }
            set {
                if ((this.IdVehicleModelField.Equals(value) != true)) {
                    this.IdVehicleModelField = value;
                    this.RaisePropertyChanged("IdVehicleModel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VehicleModelName {
            get {
                return this.VehicleModelNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VehicleModelNameField, value) != true)) {
                    this.VehicleModelNameField = value;
                    this.RaisePropertyChanged("VehicleModelName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Notification", Namespace="http://schemas.datacontract.org/2004/07/SysTimeWcfServices.Models.Dealer")]
    [System.SerializableAttribute()]
    public partial class Notification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityJsonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TableNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityJson {
            get {
                return this.EntityJsonField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityJsonField, value) != true)) {
                    this.EntityJsonField = value;
                    this.RaisePropertyChanged("EntityJson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TableName {
            get {
                return this.TableNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TableNameField, value) != true)) {
                    this.TableNameField = value;
                    this.RaisePropertyChanged("TableName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SystimeServiceWcf.ISysTimeService", CallbackContract=typeof(SystimeWCF.SystimeServiceWcf.ISysTimeServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface ISysTimeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetAllObjects", ReplyAction="http://tempuri.org/ISysTimeService/GetAllObjectsResponse")]
        SystimeWCF.SystimeServiceWcf.ViewPortObject[] GetAllObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetAllObjects", ReplyAction="http://tempuri.org/ISysTimeService/GetAllObjectsResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ViewPortObject[]> GetAllObjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/Ack", ReplyAction="http://tempuri.org/ISysTimeService/AckResponse")]
        bool Ack();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/Ack", ReplyAction="http://tempuri.org/ISysTimeService/AckResponse")]
        System.Threading.Tasks.Task<bool> AckAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/RegisterClient", ReplyAction="http://tempuri.org/ISysTimeService/RegisterClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://tempuri.org/ISysTimeService/RegisterClientStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        bool RegisterClient(string clientPcName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/RegisterClient", ReplyAction="http://tempuri.org/ISysTimeService/RegisterClientResponse")]
        System.Threading.Tasks.Task<bool> RegisterClientAsync(string clientPcName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/UnRegisterClient", ReplyAction="http://tempuri.org/ISysTimeService/UnRegisterClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(string), Action="http://tempuri.org/ISysTimeService/UnRegisterClientStringFault", Name="string", Namespace="http://schemas.microsoft.com/2003/10/Serialization/")]
        bool UnRegisterClient(string clientPcName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/UnRegisterClient", ReplyAction="http://tempuri.org/ISysTimeService/UnRegisterClientResponse")]
        System.Threading.Tasks.Task<bool> UnRegisterClientAsync(string clientPcName, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetActiveWorkersByShop", ReplyAction="http://tempuri.org/ISysTimeService/GetActiveWorkersByShopResponse")]
        SystimeWCF.SystimeServiceWcf.ActiveWorker[] GetActiveWorkersByShop(string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetActiveWorkersByShop", ReplyAction="http://tempuri.org/ISysTimeService/GetActiveWorkersByShopResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ActiveWorker[]> GetActiveWorkersByShopAsync(string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShop", ReplyAction="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShopResponse")]
        SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[] GetOpenedWorkOrdersByShop(string[] idDealerShop, bool isLocated, string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShop", ReplyAction="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShopResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[]> GetOpenedWorkOrdersByShopAsync(string[] idDealerShop, bool isLocated, string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShop_old", ReplyAction="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShop_oldResponse")]
        SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[] GetOpenedWorkOrdersByShop_old(string idDealerShop, bool isLocated, string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShop_old", ReplyAction="http://tempuri.org/ISysTimeService/GetOpenedWorkOrdersByShop_oldResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[]> GetOpenedWorkOrdersByShop_oldAsync(string idDealerShop, bool isLocated, string area);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetRolUsingValidation", ReplyAction="http://tempuri.org/ISysTimeService/GetRolUsingValidationResponse")]
        bool GetRolUsingValidation(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetRolUsingValidation", ReplyAction="http://tempuri.org/ISysTimeService/GetRolUsingValidationResponse")]
        System.Threading.Tasks.Task<bool> GetRolUsingValidationAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetVehicleById", ReplyAction="http://tempuri.org/ISysTimeService/GetVehicleByIdResponse")]
        SystimeWCF.SystimeServiceWcf.Vehicle GetVehicleById(string idVinNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetVehicleById", ReplyAction="http://tempuri.org/ISysTimeService/GetVehicleByIdResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Vehicle> GetVehicleByIdAsync(string idVinNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOperationsCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetOperationsCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.Operation[] GetOperationsCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOperationsCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetOperationsCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Operation[]> GetOperationsCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetSubOperationsCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetSubOperationsCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.SubOperation[] GetSubOperationsCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetSubOperationsCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetSubOperationsCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.SubOperation[]> GetSubOperationsCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetWorkerById", ReplyAction="http://tempuri.org/ISysTimeService/GetWorkerByIdResponse")]
        SystimeWCF.SystimeServiceWcf.Worker GetWorkerById(string idWorker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetWorkerById", ReplyAction="http://tempuri.org/ISysTimeService/GetWorkerByIdResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Worker> GetWorkerByIdAsync(string idWorker);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetWorkOrderById", ReplyAction="http://tempuri.org/ISysTimeService/GetWorkOrderByIdResponse")]
        SystimeWCF.SystimeServiceWcf.WorkOrder GetWorkOrderById(long idWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetWorkOrderById", ReplyAction="http://tempuri.org/ISysTimeService/GetWorkOrderByIdResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkOrder> GetWorkOrderByIdAsync(long idWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/WorkOrderByNumberAndDealer", ReplyAction="http://tempuri.org/ISysTimeService/WorkOrderByNumberAndDealerResponse")]
        SystimeWCF.SystimeServiceWcf.WorkOrder WorkOrderByNumberAndDealer(string workOrderNumber, string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/WorkOrderByNumberAndDealer", ReplyAction="http://tempuri.org/ISysTimeService/WorkOrderByNumberAndDealerResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkOrder> WorkOrderByNumberAndDealerAsync(string workOrderNumber, string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetInsuranceCompanyById", ReplyAction="http://tempuri.org/ISysTimeService/GetInsuranceCompanyByIdResponse")]
        SystimeWCF.SystimeServiceWcf.InsuranceCompany GetInsuranceCompanyById(string idInsuranceCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetInsuranceCompanyById", ReplyAction="http://tempuri.org/ISysTimeService/GetInsuranceCompanyByIdResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.InsuranceCompany> GetInsuranceCompanyByIdAsync(string idInsuranceCompany);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetInsuranceCompanyCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetInsuranceCompanyCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.InsuranceCompany[] GetInsuranceCompanyCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetInsuranceCompanyCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetInsuranceCompanyCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.InsuranceCompany[]> GetInsuranceCompanyCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetShopById", ReplyAction="http://tempuri.org/ISysTimeService/GetShopByIdResponse")]
        SystimeWCF.SystimeServiceWcf.DealerShop GetShopById(string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetShopById", ReplyAction="http://tempuri.org/ISysTimeService/GetShopByIdResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.DealerShop> GetShopByIdAsync(string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetShopCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetShopCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.DealerShop[] GetShopCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetShopCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetShopCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.DealerShop[]> GetShopCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOperationsByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetOperationsByWorkOrderResponse")]
        SystimeWCF.SystimeServiceWcf.OperationByWorkOrder[] GetOperationsByWorkOrder(string workOrderNumber, string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOperationsByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetOperationsByWorkOrderResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.OperationByWorkOrder[]> GetOperationsByWorkOrderAsync(string workOrderNumber, string idDealerShop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetCustomerByDocumentNumber", ReplyAction="http://tempuri.org/ISysTimeService/GetCustomerByDocumentNumberResponse")]
        SystimeWCF.SystimeServiceWcf.Customer GetCustomerByDocumentNumber(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetCustomerByDocumentNumber", ReplyAction="http://tempuri.org/ISysTimeService/GetCustomerByDocumentNumberResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Customer> GetCustomerByDocumentNumberAsync(string documentNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetSubOperationsByIdOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetSubOperationsByIdOperationByWorkOrderRespon" +
            "se")]
        SystimeWCF.SystimeServiceWcf.SubOperationByWorkOrder[] GetSubOperationsByIdOperationByWorkOrder(int idOperationByWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetSubOperationsByIdOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetSubOperationsByIdOperationByWorkOrderRespon" +
            "se")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.SubOperationByWorkOrder[]> GetSubOperationsByIdOperationByWorkOrderAsync(int idOperationByWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetDateToUpdateInWorkOrders", ReplyAction="http://tempuri.org/ISysTimeService/SetDateToUpdateInWorkOrdersResponse")]
        void SetDateToUpdateInWorkOrders(long idWorkOrder, SystimeWCF.SystimeServiceWcf.WorkOrderDataType dateType, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetDateToUpdateInWorkOrders", ReplyAction="http://tempuri.org/ISysTimeService/SetDateToUpdateInWorkOrdersResponse")]
        System.Threading.Tasks.Task SetDateToUpdateInWorkOrdersAsync(long idWorkOrder, SystimeWCF.SystimeServiceWcf.WorkOrderDataType dateType, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetNewNoteToWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetNewNoteToWorkOrderResponse")]
        void SetNewNoteToWorkOrder(long idWorkOrder, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetNewNoteToWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetNewNoteToWorkOrderResponse")]
        System.Threading.Tasks.Task SetNewNoteToWorkOrderAsync(long idWorkOrder, string note);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetTrackingByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetTrackingByWorkOrderResponse")]
        long SetTrackingByWorkOrder(SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder trackingByWorkOrderPacket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetTrackingByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetTrackingByWorkOrderResponse")]
        System.Threading.Tasks.Task<long> SetTrackingByWorkOrderAsync(SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder trackingByWorkOrderPacket);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetLastNTrackingsByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetLastNTrackingsByWorkOrderResponse")]
        SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[] GetLastNTrackingsByWorkOrder(long idWorkOrder, int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetLastNTrackingsByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetLastNTrackingsByWorkOrderResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[]> GetLastNTrackingsByWorkOrderAsync(long idWorkOrder, int n);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetWorkOrderByIsVinNumber", ReplyAction="http://tempuri.org/ISysTimeService/GetWorkOrderByIsVinNumberResponse")]
        SystimeWCF.SystimeServiceWcf.WorkOrder GetWorkOrderByIsVinNumber(string idVinNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetWorkOrderByIsVinNumber", ReplyAction="http://tempuri.org/ISysTimeService/GetWorkOrderByIsVinNumberResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkOrder> GetWorkOrderByIsVinNumberAsync(string idVinNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetFilesOrPaths", ReplyAction="http://tempuri.org/ISysTimeService/GetFilesOrPathsResponse")]
        string[] GetFilesOrPaths(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, SystimeWCF.SystimeServiceWcf.FileType fileTypeFilter, bool filesNamesOrCompletePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetFilesOrPaths", ReplyAction="http://tempuri.org/ISysTimeService/GetFilesOrPathsResponse")]
        System.Threading.Tasks.Task<string[]> GetFilesOrPathsAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, SystimeWCF.SystimeServiceWcf.FileType fileTypeFilter, bool filesNamesOrCompletePath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetFileFromPath", ReplyAction="http://tempuri.org/ISysTimeService/GetFileFromPathResponse")]
        System.IO.Stream GetFileFromPath(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, SystimeWCF.SystimeServiceWcf.FileType fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetFileFromPath", ReplyAction="http://tempuri.org/ISysTimeService/GetFileFromPathResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFileFromPathAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, SystimeWCF.SystimeServiceWcf.FileType fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SavePhoto", ReplyAction="http://tempuri.org/ISysTimeService/SavePhotoResponse")]
        bool SavePhoto(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SavePhoto", ReplyAction="http://tempuri.org/ISysTimeService/SavePhotoResponse")]
        System.Threading.Tasks.Task<bool> SavePhotoAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SavePhotoPreview", ReplyAction="http://tempuri.org/ISysTimeService/SavePhotoPreviewResponse")]
        bool SavePhotoPreview(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image, System.Nullable<int> previewFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SavePhotoPreview", ReplyAction="http://tempuri.org/ISysTimeService/SavePhotoPreviewResponse")]
        System.Threading.Tasks.Task<bool> SavePhotoPreviewAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image, System.Nullable<int> previewFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetAllWorkStationPolygons", ReplyAction="http://tempuri.org/ISysTimeService/GetAllWorkStationPolygonsResponse")]
        SystimeWCF.SystimeServiceWcf.WorkStationPolygon[] GetAllWorkStationPolygons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetAllWorkStationPolygons", ReplyAction="http://tempuri.org/ISysTimeService/GetAllWorkStationPolygonsResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkStationPolygon[]> GetAllWorkStationPolygonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetWorkOrderPosition", ReplyAction="http://tempuri.org/ISysTimeService/SetWorkOrderPositionResponse")]
        SystimeWCF.SystimeServiceWcf.Location SetWorkOrderPosition(long workOrderNumber, double xPosition, double yPosition, string area, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetWorkOrderPosition", ReplyAction="http://tempuri.org/ISysTimeService/SetWorkOrderPositionResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Location> SetWorkOrderPositionAsync(long workOrderNumber, double xPosition, double yPosition, string area, string idUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetExternalJobCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetExternalJobCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.ExternalWork[] GetExternalJobCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetExternalJobCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetExternalJobCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ExternalWork[]> GetExternalJobCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetJobTitleByDealerCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetJobTitleByDealerCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.JobTitle[] GetJobTitleByDealerCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetJobTitleByDealerCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetJobTitleByDealerCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.JobTitle[]> GetJobTitleByDealerCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetAllLastTrackings", ReplyAction="http://tempuri.org/ISysTimeService/GetAllLastTrackingsResponse")]
        SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[] GetAllLastTrackings();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetAllLastTrackings", ReplyAction="http://tempuri.org/ISysTimeService/GetAllLastTrackingsResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[]> GetAllLastTrackingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetExternalJobsByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetExternalJobsByWorkOrderResponse")]
        SystimeWCF.SystimeServiceWcf.ExternalWork[] GetExternalJobsByWorkOrder(long idWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetExternalJobsByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/GetExternalJobsByWorkOrderResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ExternalWork[]> GetExternalJobsByWorkOrderAsync(long idWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetExternalJobByIdWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetExternalJobByIdWorkOrderResponse")]
        int SetExternalJobByIdWorkOrder(SystimeWCF.SystimeServiceWcf.ExternalWork externalJobByWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetExternalJobByIdWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetExternalJobByIdWorkOrderResponse")]
        System.Threading.Tasks.Task<int> SetExternalJobByIdWorkOrderAsync(SystimeWCF.SystimeServiceWcf.ExternalWork externalJobByWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetJobTitleCatalogByIdDealerShop", ReplyAction="http://tempuri.org/ISysTimeService/GetJobTitleCatalogByIdDealerShopResponse")]
        SystimeWCF.SystimeServiceWcf.JobTitle[] GetJobTitleCatalogByIdDealerShop(string[] idDealerShops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetJobTitleCatalogByIdDealerShop", ReplyAction="http://tempuri.org/ISysTimeService/GetJobTitleCatalogByIdDealerShopResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.JobTitle[]> GetJobTitleCatalogByIdDealerShopAsync(string[] idDealerShops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOperationsCatalogByIdDealerShops", ReplyAction="http://tempuri.org/ISysTimeService/GetOperationsCatalogByIdDealerShopsResponse")]
        SystimeWCF.SystimeServiceWcf.Operation[] GetOperationsCatalogByIdDealerShops(string[] idDealerShops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetOperationsCatalogByIdDealerShops", ReplyAction="http://tempuri.org/ISysTimeService/GetOperationsCatalogByIdDealerShopsResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Operation[]> GetOperationsCatalogByIdDealerShopsAsync(string[] idDealerShops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetSubOperationsCatalogByIdDealerShops", ReplyAction="http://tempuri.org/ISysTimeService/GetSubOperationsCatalogByIdDealerShopsResponse" +
            "")]
        SystimeWCF.SystimeServiceWcf.SubOperation[] GetSubOperationsCatalogByIdDealerShops(string[] idDealerShops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetSubOperationsCatalogByIdDealerShops", ReplyAction="http://tempuri.org/ISysTimeService/GetSubOperationsCatalogByIdDealerShopsResponse" +
            "")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.SubOperation[]> GetSubOperationsCatalogByIdDealerShopsAsync(string[] idDealerShops);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetCitiesCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetCitiesCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.City[] GetCitiesCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetCitiesCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetCitiesCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.City[]> GetCitiesCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetVehicleBrandsCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetVehicleBrandsCatalogResponse")]
        SystimeWCF.SystimeServiceWcf.VehicleBrand[] GetVehicleBrandsCatalog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetVehicleBrandsCatalog", ReplyAction="http://tempuri.org/ISysTimeService/GetVehicleBrandsCatalogResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.VehicleBrand[]> GetVehicleBrandsCatalogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetVehicleModelsCatalogController", ReplyAction="http://tempuri.org/ISysTimeService/GetVehicleModelsCatalogControllerResponse")]
        SystimeWCF.SystimeServiceWcf.VehicleModel[] GetVehicleModelsCatalogController();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetVehicleModelsCatalogController", ReplyAction="http://tempuri.org/ISysTimeService/GetVehicleModelsCatalogControllerResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.VehicleModel[]> GetVehicleModelsCatalogControllerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/CreateOrUpdateCustomer", ReplyAction="http://tempuri.org/ISysTimeService/CreateOrUpdateCustomerResponse")]
        long CreateOrUpdateCustomer(SystimeWCF.SystimeServiceWcf.Customer customer, string createdOrUpdatedById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/CreateOrUpdateCustomer", ReplyAction="http://tempuri.org/ISysTimeService/CreateOrUpdateCustomerResponse")]
        System.Threading.Tasks.Task<long> CreateOrUpdateCustomerAsync(SystimeWCF.SystimeServiceWcf.Customer customer, string createdOrUpdatedById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/CreateOrUpdateVehicle", ReplyAction="http://tempuri.org/ISysTimeService/CreateOrUpdateVehicleResponse")]
        string CreateOrUpdateVehicle(SystimeWCF.SystimeServiceWcf.Vehicle vehicle, string createdOrUpdatedById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/CreateOrUpdateVehicle", ReplyAction="http://tempuri.org/ISysTimeService/CreateOrUpdateVehicleResponse")]
        System.Threading.Tasks.Task<string> CreateOrUpdateVehicleAsync(SystimeWCF.SystimeServiceWcf.Vehicle vehicle, string createdOrUpdatedById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/CreateOrUpdateWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/CreateOrUpdateWorkOrderResponse")]
        string CreateOrUpdateWorkOrder(SystimeWCF.SystimeServiceWcf.WorkOrder workOrder, string createdOrUpdatedById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/CreateOrUpdateWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/CreateOrUpdateWorkOrderResponse")]
        System.Threading.Tasks.Task<string> CreateOrUpdateWorkOrderAsync(SystimeWCF.SystimeServiceWcf.WorkOrder workOrder, string createdOrUpdatedById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/NotifyTableChanged", ReplyAction="http://tempuri.org/ISysTimeService/NotifyTableChangedResponse")]
        bool NotifyTableChanged(SystimeWCF.SystimeServiceWcf.Notification notification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/NotifyTableChanged", ReplyAction="http://tempuri.org/ISysTimeService/NotifyTableChangedResponse")]
        System.Threading.Tasks.Task<bool> NotifyTableChangedAsync(SystimeWCF.SystimeServiceWcf.Notification notification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/InsertOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/InsertOperationByWorkOrderResponse")]
        int InsertOperationByWorkOrder(int idOperationByDealer, int idWorkOrder, double estimatedTime, System.DateTime createdAt, string createdById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/InsertOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/InsertOperationByWorkOrderResponse")]
        System.Threading.Tasks.Task<int> InsertOperationByWorkOrderAsync(int idOperationByDealer, int idWorkOrder, double estimatedTime, System.DateTime createdAt, string createdById);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetOperationByWorkOrderResponse")]
        void SetOperationByWorkOrder(int idOperationByWorkOrder, float EstimatedTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetOperationByWorkOrderResponse")]
        System.Threading.Tasks.Task SetOperationByWorkOrderAsync(int idOperationByWorkOrder, float EstimatedTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/InsertSubOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/InsertSubOperationByWorkOrderResponse")]
        int InsertSubOperationByWorkOrder(System.Nullable<int> idOperationByWorkOrder, System.Nullable<int> idSubOperationByDealer, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> createdAt, string createdById, System.Nullable<bool> deleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/InsertSubOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/InsertSubOperationByWorkOrderResponse")]
        System.Threading.Tasks.Task<int> InsertSubOperationByWorkOrderAsync(System.Nullable<int> idOperationByWorkOrder, System.Nullable<int> idSubOperationByDealer, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> createdAt, string createdById, System.Nullable<bool> deleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetSubOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetSubOperationByWorkOrderResponse")]
        void SetSubOperationByWorkOrder(System.Nullable<int> idSubOperationByWorkOrderr, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> updatat, System.Nullable<bool> deleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/SetSubOperationByWorkOrder", ReplyAction="http://tempuri.org/ISysTimeService/SetSubOperationByWorkOrderResponse")]
        System.Threading.Tasks.Task SetSubOperationByWorkOrderAsync(System.Nullable<int> idSubOperationByWorkOrderr, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> updatat, System.Nullable<bool> deleted);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetViewPortObjects", ReplyAction="http://tempuri.org/ISysTimeService/GetViewPortObjectsResponse")]
        SystimeWCF.SystimeServiceWcf.ViewPortObject[] GetViewPortObjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISysTimeService/GetViewPortObjects", ReplyAction="http://tempuri.org/ISysTimeService/GetViewPortObjectsResponse")]
        System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ViewPortObject[]> GetViewPortObjectsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISysTimeServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISysTimeService/AckBackResult")]
        void AckBackResult(int data);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISysTimeService/NotifyNewTracking")]
        void NotifyNewTracking(long idWorkOrder, SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder newTracking);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISysTimeService/NotifyNewWorkOrderPosition")]
        void NotifyNewWorkOrderPosition(long idWorkOrder, SystimeWCF.SystimeServiceWcf.Location newPosition);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISysTimeService/NotifyNewSubOperationByWorkOrder")]
        void NotifyNewSubOperationByWorkOrder(long idWorkOrder, SystimeWCF.SystimeServiceWcf.SubOperationByWorkOrder subOperationByWorkOrder);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISysTimeService/NotifyCustomerCreatedOrUpdated")]
        void NotifyCustomerCreatedOrUpdated(long idCustomer, SystimeWCF.SystimeServiceWcf.Customer customerModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISysTimeService/NotifyVehicleCreatedOrUpdated")]
        void NotifyVehicleCreatedOrUpdated(long idVinNumber, SystimeWCF.SystimeServiceWcf.Vehicle vehicleModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/ISysTimeService/NotifyWorkOrderCreatedOrUpdated")]
        void NotifyWorkOrderCreatedOrUpdated(long idWorkOrder, SystimeWCF.SystimeServiceWcf.SubOperationByWorkOrder workOrderModel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISysTimeServiceChannel : SystimeWCF.SystimeServiceWcf.ISysTimeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SysTimeServiceClient : System.ServiceModel.DuplexClientBase<SystimeWCF.SystimeServiceWcf.ISysTimeService>, SystimeWCF.SystimeServiceWcf.ISysTimeService {
        
        public SysTimeServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public SysTimeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public SysTimeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SysTimeServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public SysTimeServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public SystimeWCF.SystimeServiceWcf.ViewPortObject[] GetAllObjects() {
            return base.Channel.GetAllObjects();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ViewPortObject[]> GetAllObjectsAsync() {
            return base.Channel.GetAllObjectsAsync();
        }
        
        public bool Ack() {
            return base.Channel.Ack();
        }
        
        public System.Threading.Tasks.Task<bool> AckAsync() {
            return base.Channel.AckAsync();
        }
        
        public bool RegisterClient(string clientPcName, string token) {
            return base.Channel.RegisterClient(clientPcName, token);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterClientAsync(string clientPcName, string token) {
            return base.Channel.RegisterClientAsync(clientPcName, token);
        }
        
        public bool UnRegisterClient(string clientPcName, string token) {
            return base.Channel.UnRegisterClient(clientPcName, token);
        }
        
        public System.Threading.Tasks.Task<bool> UnRegisterClientAsync(string clientPcName, string token) {
            return base.Channel.UnRegisterClientAsync(clientPcName, token);
        }
        
        public SystimeWCF.SystimeServiceWcf.ActiveWorker[] GetActiveWorkersByShop(string idDealerShop) {
            return base.Channel.GetActiveWorkersByShop(idDealerShop);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ActiveWorker[]> GetActiveWorkersByShopAsync(string idDealerShop) {
            return base.Channel.GetActiveWorkersByShopAsync(idDealerShop);
        }
        
        public SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[] GetOpenedWorkOrdersByShop(string[] idDealerShop, bool isLocated, string area) {
            return base.Channel.GetOpenedWorkOrdersByShop(idDealerShop, isLocated, area);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[]> GetOpenedWorkOrdersByShopAsync(string[] idDealerShop, bool isLocated, string area) {
            return base.Channel.GetOpenedWorkOrdersByShopAsync(idDealerShop, isLocated, area);
        }
        
        public SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[] GetOpenedWorkOrdersByShop_old(string idDealerShop, bool isLocated, string area) {
            return base.Channel.GetOpenedWorkOrdersByShop_old(idDealerShop, isLocated, area);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.OpenedWorkOrders[]> GetOpenedWorkOrdersByShop_oldAsync(string idDealerShop, bool isLocated, string area) {
            return base.Channel.GetOpenedWorkOrdersByShop_oldAsync(idDealerShop, isLocated, area);
        }
        
        public bool GetRolUsingValidation(string user, string password) {
            return base.Channel.GetRolUsingValidation(user, password);
        }
        
        public System.Threading.Tasks.Task<bool> GetRolUsingValidationAsync(string user, string password) {
            return base.Channel.GetRolUsingValidationAsync(user, password);
        }
        
        public SystimeWCF.SystimeServiceWcf.Vehicle GetVehicleById(string idVinNumber) {
            return base.Channel.GetVehicleById(idVinNumber);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Vehicle> GetVehicleByIdAsync(string idVinNumber) {
            return base.Channel.GetVehicleByIdAsync(idVinNumber);
        }
        
        public SystimeWCF.SystimeServiceWcf.Operation[] GetOperationsCatalog() {
            return base.Channel.GetOperationsCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Operation[]> GetOperationsCatalogAsync() {
            return base.Channel.GetOperationsCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.SubOperation[] GetSubOperationsCatalog() {
            return base.Channel.GetSubOperationsCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.SubOperation[]> GetSubOperationsCatalogAsync() {
            return base.Channel.GetSubOperationsCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.Worker GetWorkerById(string idWorker) {
            return base.Channel.GetWorkerById(idWorker);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Worker> GetWorkerByIdAsync(string idWorker) {
            return base.Channel.GetWorkerByIdAsync(idWorker);
        }
        
        public SystimeWCF.SystimeServiceWcf.WorkOrder GetWorkOrderById(long idWorkOrder) {
            return base.Channel.GetWorkOrderById(idWorkOrder);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkOrder> GetWorkOrderByIdAsync(long idWorkOrder) {
            return base.Channel.GetWorkOrderByIdAsync(idWorkOrder);
        }
        
        public SystimeWCF.SystimeServiceWcf.WorkOrder WorkOrderByNumberAndDealer(string workOrderNumber, string idDealerShop) {
            return base.Channel.WorkOrderByNumberAndDealer(workOrderNumber, idDealerShop);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkOrder> WorkOrderByNumberAndDealerAsync(string workOrderNumber, string idDealerShop) {
            return base.Channel.WorkOrderByNumberAndDealerAsync(workOrderNumber, idDealerShop);
        }
        
        public SystimeWCF.SystimeServiceWcf.InsuranceCompany GetInsuranceCompanyById(string idInsuranceCompany) {
            return base.Channel.GetInsuranceCompanyById(idInsuranceCompany);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.InsuranceCompany> GetInsuranceCompanyByIdAsync(string idInsuranceCompany) {
            return base.Channel.GetInsuranceCompanyByIdAsync(idInsuranceCompany);
        }
        
        public SystimeWCF.SystimeServiceWcf.InsuranceCompany[] GetInsuranceCompanyCatalog() {
            return base.Channel.GetInsuranceCompanyCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.InsuranceCompany[]> GetInsuranceCompanyCatalogAsync() {
            return base.Channel.GetInsuranceCompanyCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.DealerShop GetShopById(string idDealerShop) {
            return base.Channel.GetShopById(idDealerShop);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.DealerShop> GetShopByIdAsync(string idDealerShop) {
            return base.Channel.GetShopByIdAsync(idDealerShop);
        }
        
        public SystimeWCF.SystimeServiceWcf.DealerShop[] GetShopCatalog() {
            return base.Channel.GetShopCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.DealerShop[]> GetShopCatalogAsync() {
            return base.Channel.GetShopCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.OperationByWorkOrder[] GetOperationsByWorkOrder(string workOrderNumber, string idDealerShop) {
            return base.Channel.GetOperationsByWorkOrder(workOrderNumber, idDealerShop);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.OperationByWorkOrder[]> GetOperationsByWorkOrderAsync(string workOrderNumber, string idDealerShop) {
            return base.Channel.GetOperationsByWorkOrderAsync(workOrderNumber, idDealerShop);
        }
        
        public SystimeWCF.SystimeServiceWcf.Customer GetCustomerByDocumentNumber(string documentNumber) {
            return base.Channel.GetCustomerByDocumentNumber(documentNumber);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Customer> GetCustomerByDocumentNumberAsync(string documentNumber) {
            return base.Channel.GetCustomerByDocumentNumberAsync(documentNumber);
        }
        
        public SystimeWCF.SystimeServiceWcf.SubOperationByWorkOrder[] GetSubOperationsByIdOperationByWorkOrder(int idOperationByWorkOrder) {
            return base.Channel.GetSubOperationsByIdOperationByWorkOrder(idOperationByWorkOrder);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.SubOperationByWorkOrder[]> GetSubOperationsByIdOperationByWorkOrderAsync(int idOperationByWorkOrder) {
            return base.Channel.GetSubOperationsByIdOperationByWorkOrderAsync(idOperationByWorkOrder);
        }
        
        public void SetDateToUpdateInWorkOrders(long idWorkOrder, SystimeWCF.SystimeServiceWcf.WorkOrderDataType dateType, System.DateTime date) {
            base.Channel.SetDateToUpdateInWorkOrders(idWorkOrder, dateType, date);
        }
        
        public System.Threading.Tasks.Task SetDateToUpdateInWorkOrdersAsync(long idWorkOrder, SystimeWCF.SystimeServiceWcf.WorkOrderDataType dateType, System.DateTime date) {
            return base.Channel.SetDateToUpdateInWorkOrdersAsync(idWorkOrder, dateType, date);
        }
        
        public void SetNewNoteToWorkOrder(long idWorkOrder, string note) {
            base.Channel.SetNewNoteToWorkOrder(idWorkOrder, note);
        }
        
        public System.Threading.Tasks.Task SetNewNoteToWorkOrderAsync(long idWorkOrder, string note) {
            return base.Channel.SetNewNoteToWorkOrderAsync(idWorkOrder, note);
        }
        
        public long SetTrackingByWorkOrder(SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder trackingByWorkOrderPacket) {
            return base.Channel.SetTrackingByWorkOrder(trackingByWorkOrderPacket);
        }
        
        public System.Threading.Tasks.Task<long> SetTrackingByWorkOrderAsync(SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder trackingByWorkOrderPacket) {
            return base.Channel.SetTrackingByWorkOrderAsync(trackingByWorkOrderPacket);
        }
        
        public SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[] GetLastNTrackingsByWorkOrder(long idWorkOrder, int n) {
            return base.Channel.GetLastNTrackingsByWorkOrder(idWorkOrder, n);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[]> GetLastNTrackingsByWorkOrderAsync(long idWorkOrder, int n) {
            return base.Channel.GetLastNTrackingsByWorkOrderAsync(idWorkOrder, n);
        }
        
        public SystimeWCF.SystimeServiceWcf.WorkOrder GetWorkOrderByIsVinNumber(string idVinNumber) {
            return base.Channel.GetWorkOrderByIsVinNumber(idVinNumber);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkOrder> GetWorkOrderByIsVinNumberAsync(string idVinNumber) {
            return base.Channel.GetWorkOrderByIsVinNumberAsync(idVinNumber);
        }
        
        public string[] GetFilesOrPaths(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, SystimeWCF.SystimeServiceWcf.FileType fileTypeFilter, bool filesNamesOrCompletePath) {
            return base.Channel.GetFilesOrPaths(idKey, idUrlPath, fileTypeFilter, filesNamesOrCompletePath);
        }
        
        public System.Threading.Tasks.Task<string[]> GetFilesOrPathsAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, SystimeWCF.SystimeServiceWcf.FileType fileTypeFilter, bool filesNamesOrCompletePath) {
            return base.Channel.GetFilesOrPathsAsync(idKey, idUrlPath, fileTypeFilter, filesNamesOrCompletePath);
        }
        
        public System.IO.Stream GetFileFromPath(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, SystimeWCF.SystimeServiceWcf.FileType fileType) {
            return base.Channel.GetFileFromPath(idKey, idUrlPath, fileName, fileType);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFileFromPathAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, SystimeWCF.SystimeServiceWcf.FileType fileType) {
            return base.Channel.GetFileFromPathAsync(idKey, idUrlPath, fileName, fileType);
        }
        
        public bool SavePhoto(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image) {
            return base.Channel.SavePhoto(idKey, idUrlPath, fileName, image);
        }
        
        public System.Threading.Tasks.Task<bool> SavePhotoAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image) {
            return base.Channel.SavePhotoAsync(idKey, idUrlPath, fileName, image);
        }
        
        public bool SavePhotoPreview(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image, System.Nullable<int> previewFactor) {
            return base.Channel.SavePhotoPreview(idKey, idUrlPath, fileName, image, previewFactor);
        }
        
        public System.Threading.Tasks.Task<bool> SavePhotoPreviewAsync(string idKey, SystimeWCF.SystimeServiceWcf.IdUrlPath idUrlPath, string fileName, byte[] image, System.Nullable<int> previewFactor) {
            return base.Channel.SavePhotoPreviewAsync(idKey, idUrlPath, fileName, image, previewFactor);
        }
        
        public SystimeWCF.SystimeServiceWcf.WorkStationPolygon[] GetAllWorkStationPolygons() {
            return base.Channel.GetAllWorkStationPolygons();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.WorkStationPolygon[]> GetAllWorkStationPolygonsAsync() {
            return base.Channel.GetAllWorkStationPolygonsAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.Location SetWorkOrderPosition(long workOrderNumber, double xPosition, double yPosition, string area, string idUser) {
            return base.Channel.SetWorkOrderPosition(workOrderNumber, xPosition, yPosition, area, idUser);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Location> SetWorkOrderPositionAsync(long workOrderNumber, double xPosition, double yPosition, string area, string idUser) {
            return base.Channel.SetWorkOrderPositionAsync(workOrderNumber, xPosition, yPosition, area, idUser);
        }
        
        public SystimeWCF.SystimeServiceWcf.ExternalWork[] GetExternalJobCatalog() {
            return base.Channel.GetExternalJobCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ExternalWork[]> GetExternalJobCatalogAsync() {
            return base.Channel.GetExternalJobCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.JobTitle[] GetJobTitleByDealerCatalog() {
            return base.Channel.GetJobTitleByDealerCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.JobTitle[]> GetJobTitleByDealerCatalogAsync() {
            return base.Channel.GetJobTitleByDealerCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[] GetAllLastTrackings() {
            return base.Channel.GetAllLastTrackings();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.TrackingByWorkOrder[]> GetAllLastTrackingsAsync() {
            return base.Channel.GetAllLastTrackingsAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.ExternalWork[] GetExternalJobsByWorkOrder(long idWorkOrder) {
            return base.Channel.GetExternalJobsByWorkOrder(idWorkOrder);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ExternalWork[]> GetExternalJobsByWorkOrderAsync(long idWorkOrder) {
            return base.Channel.GetExternalJobsByWorkOrderAsync(idWorkOrder);
        }
        
        public int SetExternalJobByIdWorkOrder(SystimeWCF.SystimeServiceWcf.ExternalWork externalJobByWorkOrder) {
            return base.Channel.SetExternalJobByIdWorkOrder(externalJobByWorkOrder);
        }
        
        public System.Threading.Tasks.Task<int> SetExternalJobByIdWorkOrderAsync(SystimeWCF.SystimeServiceWcf.ExternalWork externalJobByWorkOrder) {
            return base.Channel.SetExternalJobByIdWorkOrderAsync(externalJobByWorkOrder);
        }
        
        public SystimeWCF.SystimeServiceWcf.JobTitle[] GetJobTitleCatalogByIdDealerShop(string[] idDealerShops) {
            return base.Channel.GetJobTitleCatalogByIdDealerShop(idDealerShops);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.JobTitle[]> GetJobTitleCatalogByIdDealerShopAsync(string[] idDealerShops) {
            return base.Channel.GetJobTitleCatalogByIdDealerShopAsync(idDealerShops);
        }
        
        public SystimeWCF.SystimeServiceWcf.Operation[] GetOperationsCatalogByIdDealerShops(string[] idDealerShops) {
            return base.Channel.GetOperationsCatalogByIdDealerShops(idDealerShops);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.Operation[]> GetOperationsCatalogByIdDealerShopsAsync(string[] idDealerShops) {
            return base.Channel.GetOperationsCatalogByIdDealerShopsAsync(idDealerShops);
        }
        
        public SystimeWCF.SystimeServiceWcf.SubOperation[] GetSubOperationsCatalogByIdDealerShops(string[] idDealerShops) {
            return base.Channel.GetSubOperationsCatalogByIdDealerShops(idDealerShops);
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.SubOperation[]> GetSubOperationsCatalogByIdDealerShopsAsync(string[] idDealerShops) {
            return base.Channel.GetSubOperationsCatalogByIdDealerShopsAsync(idDealerShops);
        }
        
        public SystimeWCF.SystimeServiceWcf.City[] GetCitiesCatalog() {
            return base.Channel.GetCitiesCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.City[]> GetCitiesCatalogAsync() {
            return base.Channel.GetCitiesCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.VehicleBrand[] GetVehicleBrandsCatalog() {
            return base.Channel.GetVehicleBrandsCatalog();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.VehicleBrand[]> GetVehicleBrandsCatalogAsync() {
            return base.Channel.GetVehicleBrandsCatalogAsync();
        }
        
        public SystimeWCF.SystimeServiceWcf.VehicleModel[] GetVehicleModelsCatalogController() {
            return base.Channel.GetVehicleModelsCatalogController();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.VehicleModel[]> GetVehicleModelsCatalogControllerAsync() {
            return base.Channel.GetVehicleModelsCatalogControllerAsync();
        }
        
        public long CreateOrUpdateCustomer(SystimeWCF.SystimeServiceWcf.Customer customer, string createdOrUpdatedById) {
            return base.Channel.CreateOrUpdateCustomer(customer, createdOrUpdatedById);
        }
        
        public System.Threading.Tasks.Task<long> CreateOrUpdateCustomerAsync(SystimeWCF.SystimeServiceWcf.Customer customer, string createdOrUpdatedById) {
            return base.Channel.CreateOrUpdateCustomerAsync(customer, createdOrUpdatedById);
        }
        
        public string CreateOrUpdateVehicle(SystimeWCF.SystimeServiceWcf.Vehicle vehicle, string createdOrUpdatedById) {
            return base.Channel.CreateOrUpdateVehicle(vehicle, createdOrUpdatedById);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrUpdateVehicleAsync(SystimeWCF.SystimeServiceWcf.Vehicle vehicle, string createdOrUpdatedById) {
            return base.Channel.CreateOrUpdateVehicleAsync(vehicle, createdOrUpdatedById);
        }
        
        public string CreateOrUpdateWorkOrder(SystimeWCF.SystimeServiceWcf.WorkOrder workOrder, string createdOrUpdatedById) {
            return base.Channel.CreateOrUpdateWorkOrder(workOrder, createdOrUpdatedById);
        }
        
        public System.Threading.Tasks.Task<string> CreateOrUpdateWorkOrderAsync(SystimeWCF.SystimeServiceWcf.WorkOrder workOrder, string createdOrUpdatedById) {
            return base.Channel.CreateOrUpdateWorkOrderAsync(workOrder, createdOrUpdatedById);
        }
        
        public bool NotifyTableChanged(SystimeWCF.SystimeServiceWcf.Notification notification) {
            return base.Channel.NotifyTableChanged(notification);
        }
        
        public System.Threading.Tasks.Task<bool> NotifyTableChangedAsync(SystimeWCF.SystimeServiceWcf.Notification notification) {
            return base.Channel.NotifyTableChangedAsync(notification);
        }
        
        public int InsertOperationByWorkOrder(int idOperationByDealer, int idWorkOrder, double estimatedTime, System.DateTime createdAt, string createdById) {
            return base.Channel.InsertOperationByWorkOrder(idOperationByDealer, idWorkOrder, estimatedTime, createdAt, createdById);
        }
        
        public System.Threading.Tasks.Task<int> InsertOperationByWorkOrderAsync(int idOperationByDealer, int idWorkOrder, double estimatedTime, System.DateTime createdAt, string createdById) {
            return base.Channel.InsertOperationByWorkOrderAsync(idOperationByDealer, idWorkOrder, estimatedTime, createdAt, createdById);
        }
        
        public void SetOperationByWorkOrder(int idOperationByWorkOrder, float EstimatedTime) {
            base.Channel.SetOperationByWorkOrder(idOperationByWorkOrder, EstimatedTime);
        }
        
        public System.Threading.Tasks.Task SetOperationByWorkOrderAsync(int idOperationByWorkOrder, float EstimatedTime) {
            return base.Channel.SetOperationByWorkOrderAsync(idOperationByWorkOrder, EstimatedTime);
        }
        
        public int InsertSubOperationByWorkOrder(System.Nullable<int> idOperationByWorkOrder, System.Nullable<int> idSubOperationByDealer, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> createdAt, string createdById, System.Nullable<bool> deleted) {
            return base.Channel.InsertSubOperationByWorkOrder(idOperationByWorkOrder, idSubOperationByDealer, assignedTo, assignedById, subOperationTime, operationTimePercentage, createdAt, createdById, deleted);
        }
        
        public System.Threading.Tasks.Task<int> InsertSubOperationByWorkOrderAsync(System.Nullable<int> idOperationByWorkOrder, System.Nullable<int> idSubOperationByDealer, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> createdAt, string createdById, System.Nullable<bool> deleted) {
            return base.Channel.InsertSubOperationByWorkOrderAsync(idOperationByWorkOrder, idSubOperationByDealer, assignedTo, assignedById, subOperationTime, operationTimePercentage, createdAt, createdById, deleted);
        }
        
        public void SetSubOperationByWorkOrder(System.Nullable<int> idSubOperationByWorkOrderr, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> updatat, System.Nullable<bool> deleted) {
            base.Channel.SetSubOperationByWorkOrder(idSubOperationByWorkOrderr, assignedTo, assignedById, subOperationTime, operationTimePercentage, updatat, deleted);
        }
        
        public System.Threading.Tasks.Task SetSubOperationByWorkOrderAsync(System.Nullable<int> idSubOperationByWorkOrderr, string assignedTo, string assignedById, System.Nullable<double> subOperationTime, System.Nullable<double> operationTimePercentage, System.Nullable<System.DateTime> updatat, System.Nullable<bool> deleted) {
            return base.Channel.SetSubOperationByWorkOrderAsync(idSubOperationByWorkOrderr, assignedTo, assignedById, subOperationTime, operationTimePercentage, updatat, deleted);
        }
        
        public SystimeWCF.SystimeServiceWcf.ViewPortObject[] GetViewPortObjects() {
            return base.Channel.GetViewPortObjects();
        }
        
        public System.Threading.Tasks.Task<SystimeWCF.SystimeServiceWcf.ViewPortObject[]> GetViewPortObjectsAsync() {
            return base.Channel.GetViewPortObjectsAsync();
        }
    }
}
