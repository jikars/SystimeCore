//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SystimeDataAcces.DataAccess
{
    using System;
    using System.Collections.Generic;
    
    public partial class OperationByWorkOrder
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public OperationByWorkOrder()
        {
            this.SubOperationByWorkOrder = new HashSet<SubOperationByWorkOrder>();
        }
    
        public int IdOperationByWorkOrder { get; set; }
        public int IdOperationByDealer { get; set; }
        public decimal IdWorkOrder { get; set; }
        public Nullable<System.DateTime> EstimatedAt { get; set; }
        public double EstimatedTime { get; set; }
        public double WorkforceCost { get; set; }
        public double MaterialCost { get; set; }
        public string Description { get; set; }
        public double WorkedTime { get; set; }
        public Nullable<System.DateTime> CompletedAt { get; set; }
        public System.DateTime CreatedAt { get; set; }
        public string CreatedById { get; set; }
        public Nullable<System.DateTime> UpdatedAt { get; set; }
        public string UpdatedById { get; set; }
        public byte[] Version { get; set; }
        public bool Deleted { get; set; }
    
        public virtual CatalogOperationsByDealer CatalogOperationsByDealer { get; set; }
        public virtual WorkOrders WorkOrders { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SubOperationByWorkOrder> SubOperationByWorkOrder { get; set; }
    }
}
